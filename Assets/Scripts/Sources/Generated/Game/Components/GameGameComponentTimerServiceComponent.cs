//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameComponentTimerServiceEntity { get { return GetGroup(GameMatcher.GameComponentTimerService).GetSingleEntity(); } }
    public Game.Component.TimerServiceComponent gameComponentTimerService { get { return gameComponentTimerServiceEntity.gameComponentTimerService; } }
    public bool hasGameComponentTimerService { get { return gameComponentTimerServiceEntity != null; } }

    public GameEntity SetGameComponentTimerService(Game.Service.TimerService newTimerService) {
        if (hasGameComponentTimerService) {
            throw new Entitas.EntitasException("Could not set GameComponentTimerService!\n" + this + " already has an entity with Game.Component.TimerServiceComponent!",
                "You should check if the context already has a gameComponentTimerServiceEntity before setting it or use context.ReplaceGameComponentTimerService().");
        }
        var entity = CreateEntity();
        entity.AddGameComponentTimerService(newTimerService);
        return entity;
    }

    public void ReplaceGameComponentTimerService(Game.Service.TimerService newTimerService) {
        var entity = gameComponentTimerServiceEntity;
        if (entity == null) {
            entity = SetGameComponentTimerService(newTimerService);
        } else {
            entity.ReplaceGameComponentTimerService(newTimerService);
        }
    }

    public void RemoveGameComponentTimerService() {
        gameComponentTimerServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Component.TimerServiceComponent gameComponentTimerService { get { return (Game.Component.TimerServiceComponent)GetComponent(GameComponentsLookup.GameComponentTimerService); } }
    public bool hasGameComponentTimerService { get { return HasComponent(GameComponentsLookup.GameComponentTimerService); } }

    public void AddGameComponentTimerService(Game.Service.TimerService newTimerService) {
        var index = GameComponentsLookup.GameComponentTimerService;
        var component = (Game.Component.TimerServiceComponent)CreateComponent(index, typeof(Game.Component.TimerServiceComponent));
        component.TimerService = newTimerService;
        AddComponent(index, component);
    }

    public void ReplaceGameComponentTimerService(Game.Service.TimerService newTimerService) {
        var index = GameComponentsLookup.GameComponentTimerService;
        var component = (Game.Component.TimerServiceComponent)CreateComponent(index, typeof(Game.Component.TimerServiceComponent));
        component.TimerService = newTimerService;
        ReplaceComponent(index, component);
    }

    public void RemoveGameComponentTimerService() {
        RemoveComponent(GameComponentsLookup.GameComponentTimerService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameComponentTimerService;

    public static Entitas.IMatcher<GameEntity> GameComponentTimerService {
        get {
            if (_matcherGameComponentTimerService == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameComponentTimerService);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameComponentTimerService = matcher;
            }

            return _matcherGameComponentTimerService;
        }
    }
}
