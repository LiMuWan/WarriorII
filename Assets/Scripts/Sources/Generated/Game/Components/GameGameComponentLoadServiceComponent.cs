//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameComponentLoadServiceEntity { get { return GetGroup(GameMatcher.GameComponentLoadService).GetSingleEntity(); } }
    public Game.Component.LoadServiceComponent gameComponentLoadService { get { return gameComponentLoadServiceEntity.gameComponentLoadService; } }
    public bool hasGameComponentLoadService { get { return gameComponentLoadServiceEntity != null; } }

    public GameEntity SetGameComponentLoadService(Game.Service.ILoadService newLoadService) {
        if (hasGameComponentLoadService) {
            throw new Entitas.EntitasException("Could not set GameComponentLoadService!\n" + this + " already has an entity with Game.Component.LoadServiceComponent!",
                "You should check if the context already has a gameComponentLoadServiceEntity before setting it or use context.ReplaceGameComponentLoadService().");
        }
        var entity = CreateEntity();
        entity.AddGameComponentLoadService(newLoadService);
        return entity;
    }

    public void ReplaceGameComponentLoadService(Game.Service.ILoadService newLoadService) {
        var entity = gameComponentLoadServiceEntity;
        if (entity == null) {
            entity = SetGameComponentLoadService(newLoadService);
        } else {
            entity.ReplaceGameComponentLoadService(newLoadService);
        }
    }

    public void RemoveGameComponentLoadService() {
        gameComponentLoadServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Component.LoadServiceComponent gameComponentLoadService { get { return (Game.Component.LoadServiceComponent)GetComponent(GameComponentsLookup.GameComponentLoadService); } }
    public bool hasGameComponentLoadService { get { return HasComponent(GameComponentsLookup.GameComponentLoadService); } }

    public void AddGameComponentLoadService(Game.Service.ILoadService newLoadService) {
        var index = GameComponentsLookup.GameComponentLoadService;
        var component = (Game.Component.LoadServiceComponent)CreateComponent(index, typeof(Game.Component.LoadServiceComponent));
        component.LoadService = newLoadService;
        AddComponent(index, component);
    }

    public void ReplaceGameComponentLoadService(Game.Service.ILoadService newLoadService) {
        var index = GameComponentsLookup.GameComponentLoadService;
        var component = (Game.Component.LoadServiceComponent)CreateComponent(index, typeof(Game.Component.LoadServiceComponent));
        component.LoadService = newLoadService;
        ReplaceComponent(index, component);
    }

    public void RemoveGameComponentLoadService() {
        RemoveComponent(GameComponentsLookup.GameComponentLoadService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameComponentLoadService;

    public static Entitas.IMatcher<GameEntity> GameComponentLoadService {
        get {
            if (_matcherGameComponentLoadService == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameComponentLoadService);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameComponentLoadService = matcher;
            }

            return _matcherGameComponentLoadService;
        }
    }
}
