//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gamePlayerEntity { get { return GetGroup(GameMatcher.GamePlayer).GetSingleEntity(); } }
    public Game.PlayerComponent gamePlayer { get { return gamePlayerEntity.gamePlayer; } }
    public bool hasGamePlayer { get { return gamePlayerEntity != null; } }

    public GameEntity SetGamePlayer(Game.Interface.IView newPlayerView, Game.Interface.IPlayerBehaviour newPlayerBehaviour, Game.Interface.IPlayerAni newPlayerAni) {
        if (hasGamePlayer) {
            throw new Entitas.EntitasException("Could not set GamePlayer!\n" + this + " already has an entity with Game.PlayerComponent!",
                "You should check if the context already has a gamePlayerEntity before setting it or use context.ReplaceGamePlayer().");
        }
        var entity = CreateEntity();
        entity.AddGamePlayer(newPlayerView, newPlayerBehaviour, newPlayerAni);
        return entity;
    }

    public void ReplaceGamePlayer(Game.Interface.IView newPlayerView, Game.Interface.IPlayerBehaviour newPlayerBehaviour, Game.Interface.IPlayerAni newPlayerAni) {
        var entity = gamePlayerEntity;
        if (entity == null) {
            entity = SetGamePlayer(newPlayerView, newPlayerBehaviour, newPlayerAni);
        } else {
            entity.ReplaceGamePlayer(newPlayerView, newPlayerBehaviour, newPlayerAni);
        }
    }

    public void RemoveGamePlayer() {
        gamePlayerEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.PlayerComponent gamePlayer { get { return (Game.PlayerComponent)GetComponent(GameComponentsLookup.GamePlayer); } }
    public bool hasGamePlayer { get { return HasComponent(GameComponentsLookup.GamePlayer); } }

    public void AddGamePlayer(Game.Interface.IView newPlayerView, Game.Interface.IPlayerBehaviour newPlayerBehaviour, Game.Interface.IPlayerAni newPlayerAni) {
        var index = GameComponentsLookup.GamePlayer;
        var component = (Game.PlayerComponent)CreateComponent(index, typeof(Game.PlayerComponent));
        component.PlayerView = newPlayerView;
        component.PlayerBehaviour = newPlayerBehaviour;
        component.PlayerAni = newPlayerAni;
        AddComponent(index, component);
    }

    public void ReplaceGamePlayer(Game.Interface.IView newPlayerView, Game.Interface.IPlayerBehaviour newPlayerBehaviour, Game.Interface.IPlayerAni newPlayerAni) {
        var index = GameComponentsLookup.GamePlayer;
        var component = (Game.PlayerComponent)CreateComponent(index, typeof(Game.PlayerComponent));
        component.PlayerView = newPlayerView;
        component.PlayerBehaviour = newPlayerBehaviour;
        component.PlayerAni = newPlayerAni;
        ReplaceComponent(index, component);
    }

    public void RemoveGamePlayer() {
        RemoveComponent(GameComponentsLookup.GamePlayer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGamePlayer;

    public static Entitas.IMatcher<GameEntity> GamePlayer {
        get {
            if (_matcherGamePlayer == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GamePlayer);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGamePlayer = matcher;
            }

            return _matcherGamePlayer;
        }
    }
}
